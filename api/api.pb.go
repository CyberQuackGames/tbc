// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Race Race `protobuf:"varint,1,opt,name=race,proto3,enum=api.Race" json:"race,omitempty"`
	// Types that are assignable to Spec:
	//	*PlayerOptions_BalanceDruid
	//	*PlayerOptions_Hunter
	//	*PlayerOptions_Mage
	//	*PlayerOptions_Paladin
	//	*PlayerOptions_Priest
	//	*PlayerOptions_Rogue
	//	*PlayerOptions_ElementalShaman
	//	*PlayerOptions_Warlock
	//	*PlayerOptions_Warrior
	Spec     isPlayerOptions_Spec `protobuf_oneof:"spec"`
	Consumes *Consumes            `protobuf:"bytes,11,opt,name=consumes,proto3" json:"consumes,omitempty"` // What consumes this player is going to be using.
}

func (x *PlayerOptions) Reset() {
	*x = PlayerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerOptions) ProtoMessage() {}

func (x *PlayerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerOptions.ProtoReflect.Descriptor instead.
func (*PlayerOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerOptions) GetRace() Race {
	if x != nil {
		return x.Race
	}
	return Race_RaceUnknown
}

func (m *PlayerOptions) GetSpec() isPlayerOptions_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *PlayerOptions) GetBalanceDruid() *BalanceDruid {
	if x, ok := x.GetSpec().(*PlayerOptions_BalanceDruid); ok {
		return x.BalanceDruid
	}
	return nil
}

func (x *PlayerOptions) GetHunter() *Hunter {
	if x, ok := x.GetSpec().(*PlayerOptions_Hunter); ok {
		return x.Hunter
	}
	return nil
}

func (x *PlayerOptions) GetMage() *Mage {
	if x, ok := x.GetSpec().(*PlayerOptions_Mage); ok {
		return x.Mage
	}
	return nil
}

func (x *PlayerOptions) GetPaladin() *Paladin {
	if x, ok := x.GetSpec().(*PlayerOptions_Paladin); ok {
		return x.Paladin
	}
	return nil
}

func (x *PlayerOptions) GetPriest() *Priest {
	if x, ok := x.GetSpec().(*PlayerOptions_Priest); ok {
		return x.Priest
	}
	return nil
}

func (x *PlayerOptions) GetRogue() *Rogue {
	if x, ok := x.GetSpec().(*PlayerOptions_Rogue); ok {
		return x.Rogue
	}
	return nil
}

func (x *PlayerOptions) GetElementalShaman() *ElementalShaman {
	if x, ok := x.GetSpec().(*PlayerOptions_ElementalShaman); ok {
		return x.ElementalShaman
	}
	return nil
}

func (x *PlayerOptions) GetWarlock() *Warlock {
	if x, ok := x.GetSpec().(*PlayerOptions_Warlock); ok {
		return x.Warlock
	}
	return nil
}

func (x *PlayerOptions) GetWarrior() *Warrior {
	if x, ok := x.GetSpec().(*PlayerOptions_Warrior); ok {
		return x.Warrior
	}
	return nil
}

func (x *PlayerOptions) GetConsumes() *Consumes {
	if x != nil {
		return x.Consumes
	}
	return nil
}

type isPlayerOptions_Spec interface {
	isPlayerOptions_Spec()
}

type PlayerOptions_BalanceDruid struct {
	BalanceDruid *BalanceDruid `protobuf:"bytes,2,opt,name=balance_druid,json=balanceDruid,proto3,oneof"`
}

type PlayerOptions_Hunter struct {
	Hunter *Hunter `protobuf:"bytes,3,opt,name=hunter,proto3,oneof"`
}

type PlayerOptions_Mage struct {
	Mage *Mage `protobuf:"bytes,4,opt,name=mage,proto3,oneof"`
}

type PlayerOptions_Paladin struct {
	Paladin *Paladin `protobuf:"bytes,5,opt,name=paladin,proto3,oneof"`
}

type PlayerOptions_Priest struct {
	Priest *Priest `protobuf:"bytes,6,opt,name=priest,proto3,oneof"`
}

type PlayerOptions_Rogue struct {
	Rogue *Rogue `protobuf:"bytes,7,opt,name=rogue,proto3,oneof"`
}

type PlayerOptions_ElementalShaman struct {
	ElementalShaman *ElementalShaman `protobuf:"bytes,8,opt,name=elemental_shaman,json=elementalShaman,proto3,oneof"`
}

type PlayerOptions_Warlock struct {
	Warlock *Warlock `protobuf:"bytes,9,opt,name=warlock,proto3,oneof"`
}

type PlayerOptions_Warrior struct {
	Warrior *Warrior `protobuf:"bytes,10,opt,name=warrior,proto3,oneof"`
}

func (*PlayerOptions_BalanceDruid) isPlayerOptions_Spec() {}

func (*PlayerOptions_Hunter) isPlayerOptions_Spec() {}

func (*PlayerOptions_Mage) isPlayerOptions_Spec() {}

func (*PlayerOptions_Paladin) isPlayerOptions_Spec() {}

func (*PlayerOptions_Priest) isPlayerOptions_Spec() {}

func (*PlayerOptions_Rogue) isPlayerOptions_Spec() {}

func (*PlayerOptions_ElementalShaman) isPlayerOptions_Spec() {}

func (*PlayerOptions_Warlock) isPlayerOptions_Spec() {}

func (*PlayerOptions_Warrior) isPlayerOptions_Spec() {}

type Hunter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Hunter) Reset() {
	*x = Hunter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hunter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hunter) ProtoMessage() {}

func (x *Hunter) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hunter.ProtoReflect.Descriptor instead.
func (*Hunter) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

type Mage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Mage) Reset() {
	*x = Mage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mage) ProtoMessage() {}

func (x *Mage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mage.ProtoReflect.Descriptor instead.
func (*Mage) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

type Paladin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Paladin) Reset() {
	*x = Paladin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paladin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paladin) ProtoMessage() {}

func (x *Paladin) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paladin.ProtoReflect.Descriptor instead.
func (*Paladin) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

type Priest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Priest) Reset() {
	*x = Priest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Priest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Priest) ProtoMessage() {}

func (x *Priest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Priest.ProtoReflect.Descriptor instead.
func (*Priest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

type Rogue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rogue) Reset() {
	*x = Rogue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rogue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rogue) ProtoMessage() {}

func (x *Rogue) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rogue.ProtoReflect.Descriptor instead.
func (*Rogue) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

type Warlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Warlock) Reset() {
	*x = Warlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warlock) ProtoMessage() {}

func (x *Warlock) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warlock.ProtoReflect.Descriptor instead.
func (*Warlock) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

type Warrior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Warrior) Reset() {
	*x = Warrior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warrior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warrior) ProtoMessage() {}

func (x *Warrior) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warrior.ProtoReflect.Descriptor instead.
func (*Warrior) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options     *PlayerOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	Equipment   *EquipmentSpec `protobuf:"bytes,2,opt,name=equipment,proto3" json:"equipment,omitempty"`
	CustomStats []float64      `protobuf:"fixed64,3,rep,packed,name=custom_stats,json=customStats,proto3" json:"custom_stats,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *Player) GetOptions() *PlayerOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Player) GetEquipment() *EquipmentSpec {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *Player) GetCustomStats() []float64 {
	if x != nil {
		return x.CustomStats
	}
	return nil
}

type Party struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *Party) Reset() {
	*x = Party{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *Party) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type Raid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parties []*Party `protobuf:"bytes,1,rep,name=parties,proto3" json:"parties,omitempty"`
}

func (x *Raid) Reset() {
	*x = Raid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Raid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Raid) ProtoMessage() {}

func (x *Raid) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Raid.ProtoReflect.Descriptor instead.
func (*Raid) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *Raid) GetParties() []*Party {
	if x != nil {
		return x.Parties
	}
	return nil
}

// RPC IndividualSim
type IndividualSimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player     *Player    `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Buffs      *Buffs     `protobuf:"bytes,2,opt,name=buffs,proto3" json:"buffs,omitempty"`
	Encounter  *Encounter `protobuf:"bytes,3,opt,name=encounter,proto3" json:"encounter,omitempty"`
	Iterations int32      `protobuf:"varint,4,opt,name=iterations,proto3" json:"iterations,omitempty"`
	RandomSeed int64      `protobuf:"varint,5,opt,name=random_seed,json=randomSeed,proto3" json:"random_seed,omitempty"`
	GcdMin     float64    `protobuf:"fixed64,6,opt,name=gcd_min,json=gcdMin,proto3" json:"gcd_min,omitempty"` // sets the minimum GCD
	Debug      bool       `protobuf:"varint,7,opt,name=debug,proto3" json:"debug,omitempty"`                  // enables debug logging.
	ExitOnOom  bool       `protobuf:"varint,8,opt,name=exit_on_oom,json=exitOnOom,proto3" json:"exit_on_oom,omitempty"`
}

func (x *IndividualSimRequest) Reset() {
	*x = IndividualSimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndividualSimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndividualSimRequest) ProtoMessage() {}

func (x *IndividualSimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndividualSimRequest.ProtoReflect.Descriptor instead.
func (*IndividualSimRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *IndividualSimRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *IndividualSimRequest) GetBuffs() *Buffs {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *IndividualSimRequest) GetEncounter() *Encounter {
	if x != nil {
		return x.Encounter
	}
	return nil
}

func (x *IndividualSimRequest) GetIterations() int32 {
	if x != nil {
		return x.Iterations
	}
	return 0
}

func (x *IndividualSimRequest) GetRandomSeed() int64 {
	if x != nil {
		return x.RandomSeed
	}
	return 0
}

func (x *IndividualSimRequest) GetGcdMin() float64 {
	if x != nil {
		return x.GcdMin
	}
	return 0
}

func (x *IndividualSimRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

func (x *IndividualSimRequest) GetExitOnOom() bool {
	if x != nil {
		return x.ExitOnOom
	}
	return false
}

type IndividualSimResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutionDurationMs int64                 `protobuf:"varint,1,opt,name=execution_duration_ms,json=executionDurationMs,proto3" json:"execution_duration_ms,omitempty"`
	Logs                string                `protobuf:"bytes,2,opt,name=logs,proto3" json:"logs,omitempty"`
	DpsAvg              float64               `protobuf:"fixed64,3,opt,name=dps_avg,json=dpsAvg,proto3" json:"dps_avg,omitempty"`
	DpsStdev            float64               `protobuf:"fixed64,4,opt,name=dps_stdev,json=dpsStdev,proto3" json:"dps_stdev,omitempty"`
	DpsMax              float64               `protobuf:"fixed64,5,opt,name=dps_max,json=dpsMax,proto3" json:"dps_max,omitempty"`
	DpsHist             map[int32]int32       `protobuf:"bytes,6,rep,name=dps_hist,json=dpsHist,proto3" json:"dps_hist,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NumOom              int32                 `protobuf:"varint,7,opt,name=num_oom,json=numOom,proto3" json:"num_oom,omitempty"`
	OomAtAvg            float64               `protobuf:"fixed64,8,opt,name=oom_at_avg,json=oomAtAvg,proto3" json:"oom_at_avg,omitempty"`
	DpsAtOomAvg         float64               `protobuf:"fixed64,9,opt,name=dps_at_oom_avg,json=dpsAtOomAvg,proto3" json:"dps_at_oom_avg,omitempty"`
	Casts               map[int32]*CastMetric `protobuf:"bytes,10,rep,name=casts,proto3" json:"casts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error               string                `protobuf:"bytes,11,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *IndividualSimResult) Reset() {
	*x = IndividualSimResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndividualSimResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndividualSimResult) ProtoMessage() {}

func (x *IndividualSimResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndividualSimResult.ProtoReflect.Descriptor instead.
func (*IndividualSimResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *IndividualSimResult) GetExecutionDurationMs() int64 {
	if x != nil {
		return x.ExecutionDurationMs
	}
	return 0
}

func (x *IndividualSimResult) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

func (x *IndividualSimResult) GetDpsAvg() float64 {
	if x != nil {
		return x.DpsAvg
	}
	return 0
}

func (x *IndividualSimResult) GetDpsStdev() float64 {
	if x != nil {
		return x.DpsStdev
	}
	return 0
}

func (x *IndividualSimResult) GetDpsMax() float64 {
	if x != nil {
		return x.DpsMax
	}
	return 0
}

func (x *IndividualSimResult) GetDpsHist() map[int32]int32 {
	if x != nil {
		return x.DpsHist
	}
	return nil
}

func (x *IndividualSimResult) GetNumOom() int32 {
	if x != nil {
		return x.NumOom
	}
	return 0
}

func (x *IndividualSimResult) GetOomAtAvg() float64 {
	if x != nil {
		return x.OomAtAvg
	}
	return 0
}

func (x *IndividualSimResult) GetDpsAtOomAvg() float64 {
	if x != nil {
		return x.DpsAtOomAvg
	}
	return 0
}

func (x *IndividualSimResult) GetCasts() map[int32]*CastMetric {
	if x != nil {
		return x.Casts
	}
	return nil
}

func (x *IndividualSimResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// CastMetric holds a collection of counts of casts and
//
type CastMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counts []int32   `protobuf:"varint,1,rep,packed,name=counts,proto3" json:"counts,omitempty"`
	Dmgs   []float64 `protobuf:"fixed64,2,rep,packed,name=dmgs,proto3" json:"dmgs,omitempty"`
	Tags   []int32   `protobuf:"varint,3,rep,packed,name=tags,proto3" json:"tags,omitempty"`
}

func (x *CastMetric) Reset() {
	*x = CastMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastMetric) ProtoMessage() {}

func (x *CastMetric) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastMetric.ProtoReflect.Descriptor instead.
func (*CastMetric) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{13}
}

func (x *CastMetric) GetCounts() []int32 {
	if x != nil {
		return x.Counts
	}
	return nil
}

func (x *CastMetric) GetDmgs() []float64 {
	if x != nil {
		return x.Dmgs
	}
	return nil
}

func (x *CastMetric) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

// RPC RaidSim
type RaidSimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raid       *Raid      `protobuf:"bytes,1,opt,name=raid,proto3" json:"raid,omitempty"`
	Encounter  *Encounter `protobuf:"bytes,2,opt,name=encounter,proto3" json:"encounter,omitempty"`
	RandomSeed int64      `protobuf:"varint,3,opt,name=random_seed,json=randomSeed,proto3" json:"random_seed,omitempty"`
	GcdMin     float64    `protobuf:"fixed64,4,opt,name=gcd_min,json=gcdMin,proto3" json:"gcd_min,omitempty"` // sets the minimum GCD
	Debug      bool       `protobuf:"varint,5,opt,name=debug,proto3" json:"debug,omitempty"`                  // enables debug printing.
}

func (x *RaidSimRequest) Reset() {
	*x = RaidSimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaidSimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidSimRequest) ProtoMessage() {}

func (x *RaidSimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidSimRequest.ProtoReflect.Descriptor instead.
func (*RaidSimRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{14}
}

func (x *RaidSimRequest) GetRaid() *Raid {
	if x != nil {
		return x.Raid
	}
	return nil
}

func (x *RaidSimRequest) GetEncounter() *Encounter {
	if x != nil {
		return x.Encounter
	}
	return nil
}

func (x *RaidSimRequest) GetRandomSeed() int64 {
	if x != nil {
		return x.RandomSeed
	}
	return 0
}

func (x *RaidSimRequest) GetGcdMin() float64 {
	if x != nil {
		return x.GcdMin
	}
	return 0
}

func (x *RaidSimRequest) GetDebug() bool {
	if x != nil {
		return x.Debug
	}
	return false
}

// RPC GearList
type GearListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec Spec `protobuf:"varint,1,opt,name=spec,proto3,enum=api.Spec" json:"spec,omitempty"` // Each spec has a custom gear list
}

func (x *GearListRequest) Reset() {
	*x = GearListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GearListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GearListRequest) ProtoMessage() {}

func (x *GearListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GearListRequest.ProtoReflect.Descriptor instead.
func (*GearListRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{15}
}

func (x *GearListRequest) GetSpec() Spec {
	if x != nil {
		return x.Spec
	}
	return Spec_SpecBalanceDruid
}

type GearListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*Item    `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Enchants []*Enchant `protobuf:"bytes,2,rep,name=enchants,proto3" json:"enchants,omitempty"`
	Gems     []*Gem     `protobuf:"bytes,3,rep,name=gems,proto3" json:"gems,omitempty"`
}

func (x *GearListResult) Reset() {
	*x = GearListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GearListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GearListResult) ProtoMessage() {}

func (x *GearListResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GearListResult.ProtoReflect.Descriptor instead.
func (*GearListResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{16}
}

func (x *GearListResult) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GearListResult) GetEnchants() []*Enchant {
	if x != nil {
		return x.Enchants
	}
	return nil
}

func (x *GearListResult) GetGems() []*Gem {
	if x != nil {
		return x.Gems
	}
	return nil
}

// RPC ComputeStats
type ComputeStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *Player        `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	Buffs  *Buffs         `protobuf:"bytes,2,opt,name=buffs,proto3" json:"buffs,omitempty"`
	Gear   *EquipmentSpec `protobuf:"bytes,3,opt,name=gear,proto3" json:"gear,omitempty"`
}

func (x *ComputeStatsRequest) Reset() {
	*x = ComputeStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeStatsRequest) ProtoMessage() {}

func (x *ComputeStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeStatsRequest.ProtoReflect.Descriptor instead.
func (*ComputeStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{17}
}

func (x *ComputeStatsRequest) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *ComputeStatsRequest) GetBuffs() *Buffs {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *ComputeStatsRequest) GetGear() *EquipmentSpec {
	if x != nil {
		return x.Gear
	}
	return nil
}

type ComputeStatsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GearOnly   []float64 `protobuf:"fixed64,1,rep,packed,name=gear_only,json=gearOnly,proto3" json:"gear_only,omitempty"`
	FinalStats []float64 `protobuf:"fixed64,2,rep,packed,name=finalStats,proto3" json:"finalStats,omitempty"`
	Sets       []string  `protobuf:"bytes,3,rep,name=sets,proto3" json:"sets,omitempty"`
}

func (x *ComputeStatsResult) Reset() {
	*x = ComputeStatsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeStatsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeStatsResult) ProtoMessage() {}

func (x *ComputeStatsResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeStatsResult.ProtoReflect.Descriptor instead.
func (*ComputeStatsResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{18}
}

func (x *ComputeStatsResult) GetGearOnly() []float64 {
	if x != nil {
		return x.GearOnly
	}
	return nil
}

func (x *ComputeStatsResult) GetFinalStats() []float64 {
	if x != nil {
		return x.FinalStats
	}
	return nil
}

func (x *ComputeStatsResult) GetSets() []string {
	if x != nil {
		return x.Sets
	}
	return nil
}

// RPC StatWeights
type StatWeightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options         *IndividualSimRequest `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	StatsToWeigh    []Stat                `protobuf:"varint,2,rep,packed,name=stats_to_weigh,json=statsToWeigh,proto3,enum=api.Stat" json:"stats_to_weigh,omitempty"`
	EpReferenceStat Stat                  `protobuf:"varint,3,opt,name=ep_reference_stat,json=epReferenceStat,proto3,enum=api.Stat" json:"ep_reference_stat,omitempty"`
}

func (x *StatWeightsRequest) Reset() {
	*x = StatWeightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatWeightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatWeightsRequest) ProtoMessage() {}

func (x *StatWeightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatWeightsRequest.ProtoReflect.Descriptor instead.
func (*StatWeightsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{19}
}

func (x *StatWeightsRequest) GetOptions() *IndividualSimRequest {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *StatWeightsRequest) GetStatsToWeigh() []Stat {
	if x != nil {
		return x.StatsToWeigh
	}
	return nil
}

func (x *StatWeightsRequest) GetEpReferenceStat() Stat {
	if x != nil {
		return x.EpReferenceStat
	}
	return Stat_StatStrength
}

type StatWeightsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weights       []float64 `protobuf:"fixed64,1,rep,packed,name=weights,proto3" json:"weights,omitempty"`
	WeightsStdev  []float64 `protobuf:"fixed64,2,rep,packed,name=weights_stdev,json=weightsStdev,proto3" json:"weights_stdev,omitempty"`
	EpValues      []float64 `protobuf:"fixed64,3,rep,packed,name=ep_values,json=epValues,proto3" json:"ep_values,omitempty"`
	EpValuesStdev []float64 `protobuf:"fixed64,4,rep,packed,name=ep_values_stdev,json=epValuesStdev,proto3" json:"ep_values_stdev,omitempty"`
}

func (x *StatWeightsResult) Reset() {
	*x = StatWeightsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatWeightsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatWeightsResult) ProtoMessage() {}

func (x *StatWeightsResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatWeightsResult.ProtoReflect.Descriptor instead.
func (*StatWeightsResult) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{20}
}

func (x *StatWeightsResult) GetWeights() []float64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

func (x *StatWeightsResult) GetWeightsStdev() []float64 {
	if x != nil {
		return x.WeightsStdev
	}
	return nil
}

func (x *StatWeightsResult) GetEpValues() []float64 {
	if x != nil {
		return x.EpValues
	}
	return nil
}

func (x *StatWeightsResult) GetEpValuesStdev() []float64 {
	if x != nil {
		return x.EpValuesStdev
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b,
	0x64, 0x72, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x68, 0x61,
	0x6d, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x03, 0x0a, 0x0d, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x72,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x61, 0x63, 0x65, 0x52, 0x04, 0x72, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x72, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x72, 0x75, 0x69, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x44,
	0x72, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x68, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x07,
	0x70, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x70,
	0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x65, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x69,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x69, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x05, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x6f, 0x67, 0x75,
	0x65, 0x12, 0x41, 0x0a, 0x10, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x68, 0x61, 0x6d, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x68, 0x61, 0x6d, 0x61,
	0x6e, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x53, 0x68,
	0x61, 0x6d, 0x61, 0x6e, 0x12, 0x28, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x72, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28,
	0x0a, 0x07, 0x77, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x77, 0x61, 0x72, 0x72, 0x69, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x08, 0x0a, 0x06, 0x48,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x06, 0x0a, 0x04, 0x4d, 0x61, 0x67, 0x65, 0x22, 0x09, 0x0a,
	0x07, 0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x22, 0x08, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x65,
	0x73, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x22, 0x09, 0x0a, 0x07, 0x57,
	0x61, 0x72, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x09, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x72, 0x69, 0x6f,
	0x72, 0x22, 0x8b, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x71,
	0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22,
	0x2e, 0x0a, 0x05, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22,
	0x2c, 0x0a, 0x04, 0x52, 0x61, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9b, 0x02,
	0x0a, 0x14, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x62,
	0x75, 0x66, 0x66, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x75, 0x66, 0x66, 0x73, 0x52, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73, 0x12, 0x2c, 0x0a,
	0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x67, 0x63, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x67,
	0x63, 0x64, 0x4d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x12, 0x1e, 0x0a, 0x0b, 0x65,
	0x78, 0x69, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x6f, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x65, 0x78, 0x69, 0x74, 0x4f, 0x6e, 0x4f, 0x6f, 0x6d, 0x22, 0xa2, 0x04, 0x0a, 0x13,
	0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6d, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x70, 0x73, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x70,
	0x73, 0x41, 0x76, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x70, 0x73, 0x5f, 0x73, 0x74, 0x64, 0x65,
	0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x70, 0x73, 0x53, 0x74, 0x64, 0x65,
	0x76, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x70, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x64, 0x70, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x40, 0x0a, 0x08, 0x64, 0x70,
	0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6d,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x44, 0x70, 0x73, 0x48, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x70, 0x73, 0x48, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x4f, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x0a, 0x6f, 0x6f, 0x6d, 0x5f, 0x61, 0x74, 0x5f,
	0x61, 0x76, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x6f, 0x6d, 0x41, 0x74,
	0x41, 0x76, 0x67, 0x12, 0x23, 0x0a, 0x0e, 0x64, 0x70, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x6f, 0x6f,
	0x6d, 0x5f, 0x61, 0x76, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x70, 0x73,
	0x41, 0x74, 0x4f, 0x6f, 0x6d, 0x41, 0x76, 0x67, 0x12, 0x39, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e,
	0x64, 0x69, 0x76, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x53, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x61,
	0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x3a, 0x0a, 0x0c, 0x44, 0x70, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x49, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x4c, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6d, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x64, 0x6d, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xad,
	0x01, 0x0a, 0x0e, 0x52, 0x61, 0x69, 0x64, 0x53, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x04, 0x72, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x61, 0x69, 0x64, 0x52, 0x04, 0x72, 0x61, 0x69, 0x64,
	0x12, 0x2c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x63, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x67, 0x63, 0x64, 0x4d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22, 0x30,
	0x0a, 0x0f, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x22, 0x79, 0x0a, 0x0e, 0x47, 0x65, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a,
	0x04, 0x67, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x6d, 0x52, 0x04, 0x67, 0x65, 0x6d, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x62, 0x75, 0x66, 0x66,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75,
	0x66, 0x66, 0x73, 0x52, 0x05, 0x62, 0x75, 0x66, 0x66, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x67, 0x65,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x67, 0x65,
	0x61, 0x72, 0x22, 0x65, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65, 0x61, 0x72,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x08, 0x67, 0x65, 0x61,
	0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x76, 0x69, 0x64, 0x75,
	0x61, 0x6c, 0x53, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x73, 0x54,
	0x6f, 0x57, 0x65, 0x69, 0x67, 0x68, 0x12, 0x35, 0x0a, 0x11, 0x65, 0x70, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0f, 0x65, 0x70,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x22, 0x97, 0x01,
	0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x64, 0x65, 0x76, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x0c, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x53, 0x74, 0x64,
	0x65, 0x76, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x08, 0x65, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x65, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x64,
	0x65, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0d, 0x65, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x53, 0x74, 0x64, 0x65, 0x76, 0x42, 0x06, 0x5a, 0x04, 0x61, 0x70, 0x69, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_proto_goTypes = []interface{}{
	(*PlayerOptions)(nil),        // 0: api.PlayerOptions
	(*Hunter)(nil),               // 1: api.Hunter
	(*Mage)(nil),                 // 2: api.Mage
	(*Paladin)(nil),              // 3: api.Paladin
	(*Priest)(nil),               // 4: api.Priest
	(*Rogue)(nil),                // 5: api.Rogue
	(*Warlock)(nil),              // 6: api.Warlock
	(*Warrior)(nil),              // 7: api.Warrior
	(*Player)(nil),               // 8: api.Player
	(*Party)(nil),                // 9: api.Party
	(*Raid)(nil),                 // 10: api.Raid
	(*IndividualSimRequest)(nil), // 11: api.IndividualSimRequest
	(*IndividualSimResult)(nil),  // 12: api.IndividualSimResult
	(*CastMetric)(nil),           // 13: api.CastMetric
	(*RaidSimRequest)(nil),       // 14: api.RaidSimRequest
	(*GearListRequest)(nil),      // 15: api.GearListRequest
	(*GearListResult)(nil),       // 16: api.GearListResult
	(*ComputeStatsRequest)(nil),  // 17: api.ComputeStatsRequest
	(*ComputeStatsResult)(nil),   // 18: api.ComputeStatsResult
	(*StatWeightsRequest)(nil),   // 19: api.StatWeightsRequest
	(*StatWeightsResult)(nil),    // 20: api.StatWeightsResult
	nil,                          // 21: api.IndividualSimResult.DpsHistEntry
	nil,                          // 22: api.IndividualSimResult.CastsEntry
	(Race)(0),                    // 23: api.Race
	(*BalanceDruid)(nil),         // 24: api.BalanceDruid
	(*ElementalShaman)(nil),      // 25: api.ElementalShaman
	(*Consumes)(nil),             // 26: api.Consumes
	(*EquipmentSpec)(nil),        // 27: api.EquipmentSpec
	(*Buffs)(nil),                // 28: api.Buffs
	(*Encounter)(nil),            // 29: api.Encounter
	(Spec)(0),                    // 30: api.Spec
	(*Item)(nil),                 // 31: api.Item
	(*Enchant)(nil),              // 32: api.Enchant
	(*Gem)(nil),                  // 33: api.Gem
	(Stat)(0),                    // 34: api.Stat
}
var file_api_proto_depIdxs = []int32{
	23, // 0: api.PlayerOptions.race:type_name -> api.Race
	24, // 1: api.PlayerOptions.balance_druid:type_name -> api.BalanceDruid
	1,  // 2: api.PlayerOptions.hunter:type_name -> api.Hunter
	2,  // 3: api.PlayerOptions.mage:type_name -> api.Mage
	3,  // 4: api.PlayerOptions.paladin:type_name -> api.Paladin
	4,  // 5: api.PlayerOptions.priest:type_name -> api.Priest
	5,  // 6: api.PlayerOptions.rogue:type_name -> api.Rogue
	25, // 7: api.PlayerOptions.elemental_shaman:type_name -> api.ElementalShaman
	6,  // 8: api.PlayerOptions.warlock:type_name -> api.Warlock
	7,  // 9: api.PlayerOptions.warrior:type_name -> api.Warrior
	26, // 10: api.PlayerOptions.consumes:type_name -> api.Consumes
	0,  // 11: api.Player.options:type_name -> api.PlayerOptions
	27, // 12: api.Player.equipment:type_name -> api.EquipmentSpec
	8,  // 13: api.Party.players:type_name -> api.Player
	9,  // 14: api.Raid.parties:type_name -> api.Party
	8,  // 15: api.IndividualSimRequest.player:type_name -> api.Player
	28, // 16: api.IndividualSimRequest.buffs:type_name -> api.Buffs
	29, // 17: api.IndividualSimRequest.encounter:type_name -> api.Encounter
	21, // 18: api.IndividualSimResult.dps_hist:type_name -> api.IndividualSimResult.DpsHistEntry
	22, // 19: api.IndividualSimResult.casts:type_name -> api.IndividualSimResult.CastsEntry
	10, // 20: api.RaidSimRequest.raid:type_name -> api.Raid
	29, // 21: api.RaidSimRequest.encounter:type_name -> api.Encounter
	30, // 22: api.GearListRequest.spec:type_name -> api.Spec
	31, // 23: api.GearListResult.items:type_name -> api.Item
	32, // 24: api.GearListResult.enchants:type_name -> api.Enchant
	33, // 25: api.GearListResult.gems:type_name -> api.Gem
	8,  // 26: api.ComputeStatsRequest.player:type_name -> api.Player
	28, // 27: api.ComputeStatsRequest.buffs:type_name -> api.Buffs
	27, // 28: api.ComputeStatsRequest.gear:type_name -> api.EquipmentSpec
	11, // 29: api.StatWeightsRequest.options:type_name -> api.IndividualSimRequest
	34, // 30: api.StatWeightsRequest.stats_to_weigh:type_name -> api.Stat
	34, // 31: api.StatWeightsRequest.ep_reference_stat:type_name -> api.Stat
	13, // 32: api.IndividualSimResult.CastsEntry.value:type_name -> api.CastMetric
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	file_common_proto_init()
	file_druid_proto_init()
	file_shaman_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hunter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paladin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Priest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rogue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warrior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Party); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Raid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndividualSimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndividualSimResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaidSimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GearListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GearListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeStatsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatWeightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatWeightsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*PlayerOptions_BalanceDruid)(nil),
		(*PlayerOptions_Hunter)(nil),
		(*PlayerOptions_Mage)(nil),
		(*PlayerOptions_Paladin)(nil),
		(*PlayerOptions_Priest)(nil),
		(*PlayerOptions_Rogue)(nil),
		(*PlayerOptions_ElementalShaman)(nil),
		(*PlayerOptions_Warlock)(nil),
		(*PlayerOptions_Warrior)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
