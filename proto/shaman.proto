syntax = "proto3";
package proto;

option go_package = "./proto";

message ShamanTalents {
    // Elemental
    int32 convection = 1;
    int32 concussion = 2;
    int32 call_of_flame = 3;
    bool elemental_focus = 4;
    int32 reverberation = 5;
    int32 call_of_thunder = 6;
    int32 improved_fire_totems = 7;
    int32 elemental_devastation = 8;
    bool elemental_fury = 9;
    int32 unrelenting_storm = 10;
    int32 elemental_precision = 11;
    int32 lightning_mastery = 12;
    bool elemental_mastery = 13;
    int32 lightning_overload = 14;

    // Enhancement
    int32 ancestral_knowledge = 15;
    int32 thundering_strikes = 16;
    int32 enhancing_totems = 17;
    bool shamanistic_focus = 18;
    int32 flurry = 19;
    int32 improved_weapon_totems = 20;
    int32 elemental_weapons = 21;
    int32 mental_quickness = 22;
    int32 weapon_mastery = 23;
    int32 dual_wield_specialization = 24;
    int32 unleashed_rage = 25;

    // Restoration
    int32 totemic_focus = 26;
    int32 natures_guidance = 27;
    int32 restorative_totems = 28;
    int32 tidal_mastery = 29;
    bool natures_swiftness = 30;
    bool mana_tide_totem = 31;
    int32 natures_blessing = 32;
}

message ElementalShaman {
    message Rotation {
      enum RotationType {
          Unknown = 0;
          FixedLBCL = 1;
          CLOnClearcast = 2;
          Adaptive = 3;
          CLOnCD = 4;
      }
      RotationType type = 1;
    }
    Rotation rotation = 1;

    ShamanTalents talents = 2;
    
    message Options {
        bool water_shield = 1;
				bool bloodlust = 2;
				bool mana_spring_totem = 3;
				bool totem_of_wrath = 4;
				bool wrath_of_air_totem = 5;
        // int32 WaterShieldPPM
    }
    Options options = 3;
}
