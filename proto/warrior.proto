syntax = "proto3";
package proto;

option go_package = "./proto";

message WarriorTalents {
	// Arms
	int32 improved_heroic_strike = 1;
	int32 improved_rend = 2;
	int32 improved_charge = 3;
	int32 improved_thunder_clap = 4;
	int32 improved_overpower = 5;
	bool anger_management = 6;
	int32 deep_wounds = 7;
	int32 two_handed_weapon_specialization = 8;
	int32 impale = 9;
	int32 poleaxe_specialization = 10;
	bool death_wish = 11;
	int32 mace_specialization = 12;
	int32 sword_specialization = 13;
	int32 improved_disciplines = 14;
	int32 blood_frenzy = 15;
	bool mortal_strike = 16;
	int32 improved_mortal_strike = 17;
	bool endless_rage = 18;

	// Fury
	int32 booming_voice = 19;
	int32 cruelty = 20;
	int32 unbridled_wrath = 21;
	int32 improved_cleave = 22;
	int32 commanding_presence = 23;
	int32 dual_wield_specialization = 24;
	int32 improved_execute = 25;
	int32 improved_slam = 26;
	bool sweeping_strikes = 27;
	int32 weapon_mastery = 28;
	int32 improved_berserker_rage = 29;
	int32 flurry = 30;
	int32 precision = 31;
	bool bloodthirst = 32;
	int32 improved_whirlwind = 33;
	int32 improved_berserker_stance = 34;
	bool rampage = 35;

	// Protection
	int32 improved_bloodrage = 36;
	int32 tactical_mastery = 37;
	int32 defiance = 38;
	int32 improved_sunder_armor = 39;
	int32 one_handed_weapon_specialization = 40;
	bool shield_slam = 41;
	int32 focused_rage = 42;
	int32 vitality = 43;
	bool devastate = 44;
}

message Warrior {
    message Rotation {
		enum Type {
			Unknown = 0;
			Arms = 1;
			Fury = 2;
		}

		Type type = 1;

		message ArmsSlamRotation {
			enum PrimarySpell {
				MortalStrike = 0;
				Whirlwind = 1;
				Slam = 2;
				HeroicStrike = 3;
				Overpower = 4;
				Hamstring = 5;
			}
			PrimarySpell primary_spell = 1;
		}
		ArmsSlamRotation arms = 2;

		message ArmsDWRotation {
			enum PrimarySpell {
				MortalStrike = 0;
				Whirlwind = 1;
				HeroicStrike = 2;
				Overpower = 3;
				Hamstring = 4;
			}
			PrimarySpell primary_spell = 1;
		}
		ArmsDWRotation  arms_dw = 3;

		message FuryRotation {
			enum PrimarySpell {
				Bloodthirst = 0;
				Whirlwind = 1;
				HeroicStrike = 2;
				Overpower = 3;
				Hamstring = 4;
			}
			PrimarySpell primary_spell = 1;
		}
		FuryRotation fury = 4;
    }
    Rotation rotation = 1;

    WarriorTalents talents = 2;
    
    message Options {
		bool use_ms_bt_exec = 1;
		bool use_ww_exec = 2;
		bool use_slam_exec = 3;
		double slam_latency = 4;
		bool use_hs_exec = 5;
		double hs_rage_tresh = 6;
		bool use_cleave = 7; // only when > 1 targets
		bool use_overpower = 8;
    }
    Options options = 3;
}
